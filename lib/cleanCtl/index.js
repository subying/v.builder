// Generated by CoffeeScript 1.10.0
var Utils, _, cleanCtl, color, crypto, fs, gutil, path, plumber, vfs;

fs = require('fs');

path = require('path');

_ = require('lodash');

crypto = require('crypto');

vfs = require('vinyl-fs');

gutil = require('gulp-util');

plumber = require('gulp-plumber');

color = gutil.colors;

Utils = require('../utils');

cleanCtl = (function() {
  function cleanCtl(opts) {
    this.opts = opts;
    this.root = this.opts.root;
    this.hashLen = this.opts.hashLen;
    this.srcPath = this.opts.srcPath;
    this.debugPath = this.opts.debugPath;
    this.distPath = this.opts.distPath;
    this.lessPath = this.srcPath + 'less';
    this.cssDebugPath = this.debugPath + 'css';
    this.imgDistPath = this.distPath + 'img';
    this.cssDistPath = this.distPath + 'css';
    this.env = this.opts.env;
    this.isDebug = this.opts.isDebug;
  }

  cleanCtl.prototype.init = function(cb) {
    var _cb, _distPath, files, types;
    _cb = cb || function() {};
    _distPath = this.distPath;
    Utils.getMap("cssMap");
    Utils.getMap("jsMap");
    Utils.getMap("jsHash");
    types = ['img', 'css', 'js', 'fonts'];
    files = [];
    files.push(_distPath + "**/*.*");
    files.push("!" + _distPath + "**/*.json");
    types.forEach(function(type) {
      var _map, key, results, val;
      _map = global.Cache[type + "Map"];
      results = [];
      for (key in _map) {
        val = _map[key];
        files.push("!" + path.join(_distPath, type, key));
        results.push(_map[key].distname && files.push("!" + path.join(_distPath, type, _map[key].distname)));
      }
      return results;
    });
    return vfs.src(files).on('data', function(file) {
      fs.unlinkSync(file.path);
      return gutil.log("Delete", "'" + color.cyan(file.relative) + "'...");
    }).on('end', function() {
      return _cb();
    });
  };

  return cleanCtl;

})();

module.exports = cleanCtl;
