// Generated by CoffeeScript 1.9.3
var Util, formateRe, parser, path, through;

through = require("through2");

path = require('path');

parser = require("./parser");

Util = require("../utils");

formateRe = function(str) {
  return str.replace(/\\|\.|\+/g, function(m) {
    return '\\' + m;
  });
};

module.exports = function(options) {
  var RE, ignore, type;
  options = (typeof options === "object") ? options : {};
  parser.config(options);
  ignore = options.ignore;
  type = Object.prototype.toString.call(ignore);
  switch (type) {
    case "[object Array]":
      ignore.forEach(function(p, i) {
        return ignore[i] = path.resolve(p);
      });
      RE = new RegExp("^(?:" + formateRe(ignore.join("|")) + ")");
      break;
    case "[object String]":
      ignore = path.resolve(ignore);
      RE = new RegExp("^" + formateRe(ignore));
      break;
    case "[object RegExp]":
      RE = ignore;
      break;
    default:
      break;
  }
  return through.obj(function(file, enc, done) {
    var filename, filepath, result;
    filepath = path.normalize(file.path);
    filepath = Util.tranFilePath(file.path);
    filename = path.basename(filepath);
    if ((RE && RE.test(filepath) && !(RE.lastIndex = 0)) || filename.match(/^_/)) {
      done();
      return;
    }
    result = parser.parse(filepath, options, file.contents.toString());
    if (result) {
      file.contents = new Buffer(result);
      this.push(file);
    }
    return done();
  });
};
